{
  "name": "Pike Caviar",
  "colors": {
    "activityBar.background": "#F5F5E1",
    "activityBar.border": "#E4E4CA",
    "activityBar.foreground": "#000000",
    "activityBarBadge.background": "#56AAAA",
    "activityBarBadge.foreground": "#ffffea",
    "badge.background": "#56AAAA",
    "badge.foreground": "#ffffea",
    "breadcrumb.focusForeground": "#000000",
    "button.background": "#56AAAA",
    "button.foreground": "#ffffea",
    "button.hoverBackground": "#56AAAA",
    "button.secondaryBackground": "#000000",
    "button.separator": "#ffffea",
    "checkbox.background": "#fffff1",
    "checkbox.foreground": "#56AAAA",
    "commandCenter.activeBackground": "#ffffea",
    "commandCenter.activeBorder": "#E4E4CA",
    "commandCenter.background": "#F5F5E1",
    "commandCenter.border": "#E4E4CA",
    "commandCenter.inactiveBorder": "#E4E4CA",
    "debugConsole.infoForeground": "#000000",
    "debugToolBar.background": "#ffffea",
    "dropdown.background": "#ffffea",
    "dropdown.border": "#E4E4CA",
    "editor.background": "#ffffea",
    "editor.findMatchBackground": "#EEED9E",
    "editor.findMatchHighlightBackground": "#EEED9E53",
    "editor.findMatchHighlightBorder": "#E3E296",
    "editor.findRangeHighlightBackground": "#EEED9E53",
    "editor.foreground": "#000000",
    "editor.hoverHighlightBackground": "#EEED9E53",
    "editor.lineHighlightBackground": "#eeed9e58",
    "editor.rangeHighlightBackground": "#EEED9E9f",
    "editor.selectionBackground": "#EEED9EA0",
    "editor.selectionHighlightBorder": "#E3E296",
    "editor.snippetFinalTabstopHighlightBackground": "#EEED9E54",
    "editor.snippetFinalTabstopHighlightBorder": "#E3E296",
    "editor.snippetTabstopHighlightBackground": "#EEED9E54",
    "editor.snippetTabstopHighlightBorder": "#E3E296",
    "editor.wordHighlightBackground": "#EEED9E18",
    "editor.wordHighlightBorder": "#E3E296",
    "editor.wordHighlightStrongBackground": "#EEED9E53",
    "editor.wordHighlightStrongBorder": "#E3E296",
    "editorActionList.focusBackground": "#F5F5E1",
    // If the user wants, they'll need to overwrite this
    "editorBracketHighlight.foreground1": "#000000",
    "editorBracketHighlight.foreground2": "#000000",
    "editorBracketHighlight.foreground3": "#000000",
    "editorBracketHighlight.foreground4": "#000000",
    "editorBracketHighlight.foreground5": "#000000",
    "editorBracketHighlight.foreground6": "#000000",
    "editorCommentsWidget.replyInputBackground": "#ffffea",
    "editorGroup.border": "#E4E4CA",
    "editorGroup.dropBackground": "#56AAAA72",
    "editorGroupHeader.tabsBackground": "#F5F5E1",
    "editorGroupHeader.tabsBorder": "#E4E4CA",
    "editorInlayHint.background": "#E4E4CA4c",
    "editorInlayHint.foreground": "#000000c0",
    "editorLineNumber.activeForeground": "#000000",
    // slightly darker variation than the border because we're not animals
    "editorLineNumber.foreground": "#d2d2c2",
    "editorRuler.foreground": "#E4E4CA90",
    "editorStickyScrollHover.background": "#EEED9Ecf",
    "editorSuggestWidget.selectedBackground": "#F5F5E1",
    "editorUnicodeHighlight.border": "#56AAAA",
    "editorWidget.background": "#ffffea",
    "editorWidget.border": "#E4E4CA",
    "editorWidget.foreground": "#000000",
    "extensionButton.background": "#56AAAA",
    "extensionButton.foreground": "#ffffea",
    "extensionButton.hoverBackground": "#56AAAA",
    "extensionButton.separator": "#ffffea",
    "focusBorder": "#56AAAA",
    "icon.foreground": "#000000",
    "input.background": "#ffffea",
    "input.border": "#E4E4CA",
    "input.foreground": "#000000",
    "list.activeSelectionBackground": "#ffffeab0",
    "list.activeSelectionForeground": "#000000",
    "list.dropBackground": "#56AAAA72",
    "list.hoverBackground": "#ffffeab0",
    "list.hoverForeground": "#000000",
    "list.inactiveSelectionBackground": "#ffffeab0",
    "list.inactiveSelectionForeground": "#000000",
    "menu.background": "#ffffea",
    "menu.foreground": "#000000",
    "menu.selectionBackground": "#ffffea",
    "menu.selectionForeground": "#000000",
    "notebook.cellBorderColor": "#E4E4CA",
    "notebook.cellEditorBackground": "#ffffea",
    "notebook.editorBackground": "#F5F5E1",
    "notebook.focusedCellBorder": "#56AAAA",
    "notifications.background": "#ffffea",
    "panel.background": "#F5F5E1",
    "panel.border": "#E4E4CA",
    "panelInput.border": "#E4E4CA",
    "panelSection.dropBackground": "#56AAAA72",
    "panelTitle.activeBorder": "#56AAAA",
    "panelTitle.activeForeground": "#000000",
    "panelTitle.inactiveForeground": "#000000",
    "peekView.border": "#56AAAA",
    "peekViewEditor.background": "#ffffea",
    "peekViewResult.background": "#F5F5E1",
    "peekViewResult.matchHighlightBackground": "#EEED9E",
    "peekViewResult.selectionBackground": "#ffffea",
    "peekViewResult.selectionForeground": "#000000",
    "peekViewTitle.background": "#F5F5E1",
    "pickerGroup.border": "#E4E4CA",
    "progressBar.background": "#56AAAA",
    "quickInput.background": "#F5F5E1",
    "quickInput.foreground": "#000000",
    "quickInputList.focusBackground": "#ffffea",
    "quickInputList.focusIconForeground": "#000000",
    "quickInputTitle.background": "#F5F5E1",
    "scrollbar.shadow": "#E4E4CA",
    "scrollbarSlider.activeBackground": "#E4E4CAB0",
    "scrollbarSlider.background": "#E4E4CA60",
    "scrollbarSlider.hoverBackground": "#E4E4CA90",
    "sideBar.background": "#F5F5E1",
    "sideBar.border": "#E4E4CA",
    "sideBar.dropBackground": "#56AAAA72",
    "sideBar.foreground": "#000000",
    "sideBarSectionHeader.background": "#F5F5E1",
    "sideBarSectionHeader.border": "#E4E4CA",
    "statusBar.background": "#F5F5E1",
    "statusBar.border": "#E4E4CA",
    "statusBar.debuggingBackground": "#56AAAA",
    "statusBar.debuggingBorder": "#56AAAA",
    "statusBar.debuggingForeground": "#ffffea",
    "statusBar.foreground": "#000000",
    "statusBar.noFolderBackground": "#F5F5E1",
    "statusBarItem.focusBorder": "#56AAAA",
    "statusBarItem.hoverBackground": "#ffffea",
    "statusBarItem.prominentBackground": "#56AAAA",
    "statusBarItem.prominentForeground": "#F5F5E1",
    "tab.activeBorder": "#ffffea",
    "tab.activeBorderTop": "#56AAAA",
    "tab.activeModifiedBorder": "#56AAAA",
    "tab.border": "#E4E4CA",
    "tab.hoverBackground": "#ffffea",
    "tab.inactiveBackground": "#F5F5E1",
    "tab.inactiveModifiedBorder": "#56AAAA",
    "tab.lastPinnedBorder": "#E4E4CA",
    "terminal.background": "#F5F5E1",
    "terminal.dropBackground": "#56AAAA72",
    "terminalStickyScroll.background": "#F5F5E1",
    "terminalStickyScrollHover.background": "#EEED9E",
    "textLink.foreground": "#56AAAA",
    "textSeparator.foreground": "#E4E4CA",
    "titleBar.activeBackground": "#F5F5E1",
    "titleBar.border": "#E4E4CA",
    "titleBar.inactiveBackground": "#F5F5E1",
    "toolbar.hoverBackground": "#E4E4CA",
    "tree.inactiveIndentGuidesStroke": "#E4E4CA",
    "tree.indentGuidesStroke": "#E4E4CA",
    // Gitlens specific (do not sort with the rest)
    "gitlens.gutterBackgroundColor": "#F5F5E100",
    "gitlens.gutterForegroundColor": "#000000",
    "gitlens.trailingLineForegroundColor": "#00000070"
  },
  "semanticHighlighting": true,
  "semanticTokenColors": {
    // Having `"fontStyle": ""` will override the regular tokens!!
    "class": {
      "foreground": "#2A7878",
      "fontStyle": ""
    },
    "struct": {
      "foreground": "#2A7878",
      "fontStyle": ""
    },
    "enum": {
      "foreground": "#2A7878",
      "fontStyle": ""
    },
    "enumMember": {
      "foreground": "#2A7878",
      "fontStyle": ""
    },
    // Types
    "type": {
      "foreground": "#2A7878"
    },
    "typeAlias": {
      "foreground": "#2A7878"
    },
    "*.typeHint": {
      "foreground": "#2A7878"
    },
    "interface": {
      "foreground": "#2A7878"
    },
    // Macro related
    "macro": {
      "foreground": "#6423A9"
    },
    "builtinAttribute": {
      "foreground": "#6423A9"
    },
    "decorator": {
      "foreground": "#6423A9"
    },
    "deriveHelper": {
      "foreground": "#6423A9"
    },
    "attribute": "#6423A9",
    "attributeBracket": "#6423A9",
    // Functions / Methods
    "method": {},
    "function": {},
    "magicFunction": {
      "fontStyle": "italic"
    },
    // Function Parameters
    "parameter": {
      "fontStyle": ""
    },
    "escapeSequence": {
      "foreground": "#c54029",
      "fontStyle": "bold"
    },
    "keyword": {
      "foreground": "#294287"
    },
    "namespace": {
      "fontStyle": ""
    },
    "operator": {
      "fontStyle": ""
    },
    "*.controlFlow": {
      "fontStyle": "bold"
    },
    "*.unsafe": {
      "fontStyle": "bold"
    },
    "*.consuming": {
      "fontStyle": "italic"
    },
    "*.mutable": {
      "fontStyle": "underline"
    },
    // They're usually upper case
    "*.constant": {
      "fontStyle": ""
    },
    "builtinConstant": {
      "fontStyle": ""
    },
    "*.builtin": {
      "fontStyle": ""
    },
    "*.deprecated": {
      "fontStyle": "strikethrough"
    },
    "comment": "#6d6d6d",
    "label": {
      "fontStyle": "bold"
    },
    "string": "#266939"
  },
  "tokenColors": [
    {
      "name": "Comments",
      "scope": [
        "comment",
        "punctuation.definition.comment"
      ],
      "settings": {
        // "fontStyle": "italic",
        "foreground": "#6d6d6d"
      }
    },
    {
      "name": "Strings",
      "scope": [
        "string",
        "punctuation.definition.string",
        "string.quoted.single.python"
      ],
      "settings": {
        "foreground": "#266939",
        "fontStyle": "" // Empty to enforce no style
      }
    },
    {
      "name": "Strings: Escape Sequences",
      "scope": [
        "constant.character.escape",
        "support.other.escape.special"
      ],
      "settings": {
        "foreground": "#c54029",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Constant Literals",
      "scope": [
        "constant.numeric",
        "constant.language.json.comments"
      ],
      "settings": {
        "foreground": "#294287"
      }
    },
    {
      "name": "YAML: True, False, Null",
      "scope": [
        "constant.language.boolean.yaml",
        "constant.language.null.yaml"
      ],
      "settings": {
        "foreground": "#294287"
      }
    },
    {
      "name": "YAML: Name Tag",
      "scope": [
        "entity.name.tag.yaml"
      ],
      "settings": {
        "foreground": "#2A7878"
      }
    },
    {
      "name": "Fallback: Enum & Enum Member",
      "scope": [
        "entity.name.type.enum",
        "variable.other.enummember"
      ],
      "settings": {
        "foreground": "#2A7878",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Namespaces",
      "scope": "entity.name.namespace",
      "settings": {
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Types",
      "scope": [
        "entity.name.type",
        "support.type",
        "storage.type"
      ],
      "settings": {
        "foreground": "#2A7878",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Struct",
      "scope": [
        "storage.type.struct"
      ],
      "settings": {
        "foreground": "#2A7878",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Class",
      "scope": [
        "entity.name.type.class",
        "support.class"
      ],
      "settings": {
        "foreground": "#2A7878",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Interface",
      "scope": [
        "entity.name.type.interface"
      ],
      "settings": {
        "foreground": "#2A7878",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Function",
      "scope": [
        "entity.name.function",
        "support.function",
        "entity.name.function.member"
      ],
      "settings": {
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Macro",
      "scope": [
        "entity.name.function.macro"
      ],
      "settings": {
        "foreground": "#6423A9"
      }
    },
    {
      "name": "Fallback: Variable",
      "scope": [
        "variable.other.readwrite",
        "entity.name.variable",
        "variable.other.constant",
        "support.constant"
      ],
      "settings": {}
    },
    {
      "name": "Fallback: Parameter",
      "scope": [
        "variable.parameter"
      ],
      "settings": {}
    },
    {
      "name": "Fallback: Property",
      "scope": [
        "variable.parameter",
        "variable.other.parameter"
      ],
      "settings": {}
    },
    {
      "name": "Fallback: Event",
      "scope": [
        "variable.other.event"
      ],
      "settings": {}
    },
    {
      "name": "Fallback: Keywords",
      "scope": [
        "keyword.function",
        "keyword.control",
        "keyword.var",
        "keyword.type",
        "keyword.package",
        "keyword.interface"
      ],
      "settings": {
        "foreground": "#294287"
      }
    },
    {
      "name": "Python: Decorators",
      "scope": [
        "punctuation.definition.decorator.python",
        "entity.name.function.decorator.python",
        "meta.function.decorator.python"
      ],
      "settings": {
        "foreground": "#6423A9"
      }
    },
    {
      "name": "Python Keyword: Declarations",
      "scope": [
        "constant.language.python",
        "keyword.control.flow.python",
        "keyword.control.import.python",
        "keyword.operator.logical.python",
        "storage.type.class.python",
        "storage.type.function.async.python",
        "storage.type.function.lambda.python",
        "storage.type.function.python"
      ],
      "settings": {
        "foreground": "#294287"
      }
    },
    {
      "name": "Python Control Flow",
      "scope": [
        "keyword.control.flow.python"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "JS & TS (X) Keyword",
      "scope": [
        "constant.language.boolean.false.js",
        "constant.language.boolean.false.jsx",
        "constant.language.boolean.false.ts",
        "constant.language.boolean.false.tsx",
        "constant.language.boolean.true.js",
        "constant.language.boolean.true.jsx",
        "constant.language.boolean.true.ts",
        "constant.language.boolean.true.tsx",
        "constant.language.null.js",
        "constant.language.null.jsx",
        "constant.language.null.ts",
        "constant.language.null.tsx",
        "constant.language.undefined.js",
        "constant.language.undefined.jsx",
        "constant.language.undefined.ts",
        "constant.language.undefined.tsx",
        "keyword.control.as.js",
        "keyword.control.as.jsx",
        "keyword.control.as.ts",
        "keyword.control.as.tsx",
        "keyword.control.conditional.js",
        "keyword.control.conditional.jsx",
        "keyword.control.conditional.ts",
        "keyword.control.conditional.tsx",
        "keyword.control.export.js",
        "keyword.control.export.jsx",
        "keyword.control.export.ts",
        "keyword.control.export.tsx",
        "keyword.control.flow.js",
        "keyword.control.flow.jsx",
        "keyword.control.flow.ts",
        "keyword.control.flow.tsx",
        "keyword.control.from.js",
        "keyword.control.from.jsx",
        "keyword.control.from.ts",
        "keyword.control.from.tsx",
        "keyword.control.import.js",
        "keyword.control.import.jsx",
        "keyword.control.import.ts",
        "keyword.control.import.tsx",
        "keyword.control.loop.js",
        "keyword.control.loop.jsx",
        "keyword.control.loop.ts",
        "keyword.control.loop.tsx",
        "keyword.control.switch.js",
        "keyword.control.switch.jsx",
        "keyword.control.switch.ts",
        "keyword.control.switch.tsx",
        "keyword.control.trycatch.js",
        "keyword.control.trycatch.jsx",
        "keyword.control.trycatch.ts",
        "keyword.control.trycatch.tsx",
        "keyword.operator.expression.delete.js",
        "keyword.operator.expression.delete.jsx",
        "keyword.operator.expression.delete.ts",
        "keyword.operator.expression.delete.tsx",
        "keyword.operator.expression.in.js",
        "keyword.operator.expression.in.jsx",
        "keyword.operator.expression.in.ts",
        "keyword.operator.expression.in.tsx",
        "keyword.operator.expression.instanceof.js",
        "keyword.operator.expression.instanceof.jsx",
        "keyword.operator.expression.instanceof.ts",
        "keyword.operator.expression.instanceof.tsx",
        "keyword.operator.expression.is.js",
        "keyword.operator.expression.is.jsx",
        "keyword.operator.expression.is.ts",
        "keyword.operator.expression.is.tsx",
        "keyword.operator.expression.keyof.js",
        "keyword.operator.expression.keyof.jsx",
        "keyword.operator.expression.keyof.ts",
        "keyword.operator.expression.keyof.tsx",
        "keyword.operator.expression.of.js",
        "keyword.operator.expression.of.jsx",
        "keyword.operator.expression.of.ts",
        "keyword.operator.expression.of.tsx",
        "keyword.operator.expression.typeof.js",
        "keyword.operator.expression.typeof.jsx",
        "keyword.operator.expression.typeof.ts",
        "keyword.operator.expression.typeof.tsx",
        "keyword.operator.new.js",
        "keyword.operator.new.jsx",
        "keyword.operator.new.ts",
        "keyword.operator.new.tsx",
        "storage.modifier.async.js",
        "storage.modifier.async.jsx",
        "storage.modifier.async.ts",
        "storage.modifier.async.tsx",
        "storage.modifier.js",
        "storage.modifier.jsx",
        "storage.modifier.ts",
        "storage.modifier.tsx",
        "storage.type.class.js",
        "storage.type.class.jsx",
        "storage.type.class.ts",
        "storage.type.class.tsx",
        "storage.type.enum.js",
        "storage.type.enum.jsx",
        "storage.type.enum.ts",
        "storage.type.enum.tsx",
        "storage.type.function.js",
        "storage.type.function.jsx",
        "storage.type.function.ts",
        "storage.type.function.tsx",
        "storage.type.interface.js",
        "storage.type.interface.jsx",
        "storage.type.interface.ts",
        "storage.type.interface.tsx",
        "storage.type.js",
        "storage.type.jsx",
        "storage.type.namespace.js",
        "storage.type.namespace.jsx",
        "storage.type.namespace.ts",
        "storage.type.namespace.tsx",
        "storage.type.ts",
        "storage.type.tsx",
        "storage.type.type.js",
        "storage.type.type.jsx",
        "storage.type.type.ts",
        "storage.type.type.tsx",
        "variable.language.super.js",
        "variable.language.super.jsx",
        "variable.language.super.ts",
        "variable.language.super.tsx",
        "variable.language.this.js",
        "variable.language.this.jsx",
        "variable.language.this.ts",
        "variable.language.this.tsx"
      ],
      "settings": {
        "foreground": "#294287"
      }
    },
    {
      "name": "JS & TS (X): This",
      "scope": [
        "variable.language.this.js",
        "variable.language.this.jsx",
        "variable.language.this.ts",
        "variable.language.this.tsx"
      ],
      "settings": {
        "fontStyle": "underline"
      }
    },
    {
      "name": "JS & TS (X): Super",
      "scope": [
        "variable.language.super.js",
        "variable.language.super.jsx",
        "variable.language.super.ts",
        "variable.language.super.tsx"
      ],
      "settings": {
        "fontStyle": "underline"
      }
    },
    {
      "name": "JS & TS (X): Control",
      "scope": [
        "keyword.control.as.js",
        "keyword.control.as.jsx",
        "keyword.control.as.ts",
        "keyword.control.as.tsx",
        "keyword.control.conditional.js",
        "keyword.control.conditional.jsx",
        "keyword.control.conditional.ts",
        "keyword.control.conditional.tsx",
        "keyword.control.export.js",
        "keyword.control.export.jsx",
        "keyword.control.export.ts",
        "keyword.control.export.tsx",
        "keyword.control.flow.js",
        "keyword.control.flow.jsx",
        "keyword.control.flow.ts",
        "keyword.control.flow.tsx",
        "keyword.control.from.js",
        "keyword.control.from.jsx",
        "keyword.control.from.ts",
        "keyword.control.from.tsx",
        "keyword.control.import.js",
        "keyword.control.import.jsx",
        "keyword.control.import.ts",
        "keyword.control.import.tsx",
        "keyword.control.loop.js",
        "keyword.control.loop.jsx",
        "keyword.control.loop.ts",
        "keyword.control.loop.tsx",
        "keyword.control.switch.js",
        "keyword.control.switch.jsx",
        "keyword.control.switch.ts",
        "keyword.control.switch.tsx",
        "keyword.control.trycatch.js",
        "keyword.control.trycatch.jsx",
        "keyword.control.trycatch.ts",
        "keyword.control.trycatch.tsx"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "JS & TS (X): Debugger",
      "scope": [
        "keyword.other.debugger.js",
        "keyword.other.debugger.jsx",
        "keyword.other.debugger.ts",
        "keyword.other.debugger.tsx"
      ],
      "settings": {
        "fontStyle": "bold",
        "foreground": "#294287"
      }
    },
    {
      "name": "Markup: Headings",
      "scope": [
        "markup.heading"
      ],
      "settings": {
        "fontStyle": "bold",
        "foreground": "#294287"
      }
    },
    {
      "name": "Markup: Code",
      "scope": [
        "markup.fenced_code.block"
      ],
      "settings": {
        "foreground": "#2A7878"
      }
    },
    {
      "name": "Markup: Links",
      "scope": [
        "markup.underline.link"
      ],
      "settings": {
        "foreground": "#2A5DDE"
      }
    },
    {
      "name": "Markup: Italic",
      "scope": [
        "markup.italic"
      ],
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "Markup: Bold",
      "scope": [
        "markup.bold"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "Markup: Strikethrough",
      "scope": [
        "markup.strikethrough"
      ],
      "settings": {
        "fontStyle": "strikethrough"
      }
    },
    {
      "name": "Markup: Underline",
      "scope": [
        "markup.underline"
      ],
      "settings": {
        "fontStyle": "underline"
      }
    },
    {
      "name": "Markup: Quotes",
      "scope": [
        "markup.quote"
      ],
      "settings": {
        "foreground": "#276E48",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Go: Control Flow",
      "scope": [
        "keyword.control.go"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "Rust: Control Flow",
      "scope": [
        "keyword.control.rust"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "Rust: Other",
      "scope": [
        "keyword.other.rust",
        "keyword.other.fn.rust",
        "keyword.other.crate.rust"
      ],
      "settings": {
        "foreground": "#294287"
      }
    },
    {
      "name": "Rust: Storage",
      "scope": [
        "storage.type.rust",
        "storage.modifier.mut.rust"
      ],
      "settings": {
        "foreground": "#294287"
      }
    },
    {
      "name": "Rust: Constants",
      "scope": [
        "constant.language.bool.rust"
      ],
      "settings": {
        "foreground": "#294287"
      }
    },
    {
      "name": "Rust: Macros",
      "scope": [
        "meta.attribute.rust"
      ],
      "settings": {
        "foreground": "#6423A9"
      }
    },
    {
      "name": "TOML: Constants",
      "scope": [
        "constant.language.boolean.toml",
        "constant.numeric.integer.toml"
      ],
      "settings": {
        "foreground": "#294287"
      }
    }
  ]
}
